// <auto-generated />
using System;
using MathHelperr.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathHelperr.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241021095033_AddExerciseTypeAndLevel")]
    partial class AddExerciseTypeAndLevel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MathHelperr.Model.Db.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("MathTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("LevelId");

                    b.HasIndex("MathTypeId");

                    b.HasIndex("ResultId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.MathType", b =>
                {
                    b.Property<int>("MathTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MathTypeId"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("MathTypeId");

                    b.ToTable("MathType");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<int>("ResultValue")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Solution", b =>
                {
                    b.Property<int>("SolutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolutionId"));

                    b.Property<int>("ElapsedTime")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SolutionId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("ResultId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Exercise", b =>
                {
                    b.HasOne("MathHelperr.Model.Db.Level", "Level")
                        .WithMany("Exercises")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathHelperr.Model.Db.MathType", "MathType")
                        .WithMany("Exercises")
                        .HasForeignKey("MathTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathHelperr.Model.Db.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("MathType");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Solution", b =>
                {
                    b.HasOne("MathHelperr.Model.Db.Exercise", "Exercise")
                        .WithMany("Solutions")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathHelperr.Model.Db.Result", "Result")
                        .WithMany("Solutions")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Exercise", b =>
                {
                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Level", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.MathType", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("MathHelperr.Model.Db.Result", b =>
                {
                    b.Navigation("Solutions");
                });
#pragma warning restore 612, 618
        }
    }
}
